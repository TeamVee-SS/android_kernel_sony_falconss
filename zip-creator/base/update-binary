#!/sbin/sh

# Get values used in original zip
#interface="${1}"
updater_fd="${2}"
zipfile="${3}"

# Set ui_print
ui_print() {
	echo -en "ui_print ${1}\n" > /proc/self/fd/"${updater_fd}"
	echo -en "ui_print \n" > /proc/self/fd/"${updater_fd}"
}

# Start of main process
START=$(date +"%s")

# Dirs used
working_dir="/tmp/kernel"
original_dir=$(pwd)

# Clean working folder
rm -rf ${working_dir}/
mkdir -p ${working_dir}/
cd ${working_dir}/

# Unzip current zipfile
unzip "${zipfile}"
chmod 777 ${working_dir}/unpackbootimg
chmod 777 ${working_dir}/mkbootimg

# Get device.prop values
builder=$(sed -n "1p" "${working_dir}/device.prop")
custom_kernel=$(sed -n "2p" "${working_dir}/device.prop")
device_name=$(sed -n "3p" "${working_dir}/device.prop")
release=$(sed -n "4p" "${working_dir}/device.prop")

# Initial Print
ui_print
ui_print "${builder} Presents"
ui_print "${custom_kernel} for ${device_name}"
ui_print "${release}"

# Set original boot
boot_partition="/dev/block/platform/msm_sdcc.1/by-name/boot"
original_boot_image="${working_dir}/boot.img"

# Pickup original boot.img to use only current ramdisk
dd if=${boot_partition} of=${original_boot_image}

# Unpack current ramdisk from original boot.img
${working_dir}/unpackbootimg ${original_boot_image}

# Set original files
original_boot_cmdline=$(cat ${working_dir}/boot.img-cmdline)
original_boot_base=$(cat ${working_dir}/boot.img-base)
original_boot_ramdisk="${working_dir}/boot.img-ramdisk.gz"

# Set new files
new_boot_zImage="${working_dir}/zImage"
new_boot_dt="${working_dir}/dt.img"
new_boot_image="${working_dir}/newboot.img"

# Make a new boot.img with current ramdisk
${working_dir}/mkbootimg \
--base 0x00000000 \
--ramdisk_offset 0x02000000 \
--tags_offset 0x01E00000 \
--pagesize 2048 \
--ramdisk "${original_boot_ramdisk}" \
--cmdline "${original_boot_cmdline}" \
--kernel "${new_boot_zImage}" \
--dt "${new_boot_dt}" \
-o "${new_boot_image}"

# Flash new boot.img
dd if=${new_boot_image} of=${boot_partition}

# Clean working ${working_dir} folder
rm -rf ${working_dir}/

# End of work
BUILDTIME=$(($(date +"%s") - ${START}))

# Go back to original dir
cd ${original_dir}

# End of main process
ui_print "Flash done in $((${BUILDTIME} % 60)) seconds."
ui_print
